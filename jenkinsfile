@Library('my-shared-library') _

pipeline {
  

  agent any

  tools {

  // Global Tool Configuration

  maven 'maven-3.9'


  }


  parameters{
  	choice(name: 'action', choices: 'create\ndelete', description: 'Choose create/Destroy')

  }
   

  stages{

        // when { expression {  params.action == 'create' } }
     
    stage('Git CheckOut') {

       when { expression {  params.action == 'create' } }

      steps{
      
      gitCheckOut(

        branch: "main",

        url: "https://github.com/vikashmuktha/E2E-Jenkinsfile-ECR-Mr.DevOps.git"

      )

      }


    }

    stage('Unit Test'){

       when { expression {  params.action == 'create' } }

      steps{

        script{

        mvnTest()
        
        }
        
      }
    }

    stage('Integration Test'){

      when { expression { params.action == 'create' } }

      steps{

        script{

          mvnIntegrationTest()

        }
      }
    }

    stage('Static Code Analysis') {

      // squ_575fa14503efb8556e2d4a308e9ed413549e4d0a

      when { expression { params.action == 'create' } }

      steps{

        script {

          def SonarQubecredentialsId = 'sonar-token'
            statiCodeAnalysis(SonarQubecredentialsId)
          
          

          /*
          def SonarQubecredentialsId = 'sonarqube-api'
                   QualityGateStatus(SonarQubecredentialsId)
                        withSonarQubeEnv(credentialsId: 'sonar-token')
                          waitForQualityGate abortPipeline: false, 
                            credentialsId: 'sonar-token'
          */
        }
      }

    }

  }

}
